body {
  background: #1a1e23;
  margin: 0;
}

$bubble-count: 50;
$sway-type: "sway-left-to-right", "sway-right-to-left";

@function random_range($min, $max) {
  $rand: random();
  $random_range: $min + floor($rand * (($max - $min) + 1));
  @return $random_range;
}

@function sample($list) {
  @return nth($list, random(length($list)));
}

.bubbles {
  position: relative;
  width: 100%;
  height: 100vh;
  overflow: scroll;
  background: #000;
  margin: 0;
}

.bubble {
  position: absolute;
  left: var(--bubble-left-offset);
  bottom: -10%;
  display: block;
  width: var(--bubble-radius);
  height: var(--bubble-radius);
  border-radius: 50%;
  animation: float-up var(--bubble-float-duration) var(--bubble-float-delay)
    ease-in infinite;

  &::before {
    position: absolute;
    content: "";
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #fff;
    border-radius: inherit;
    animation: var(--bubble-sway-type) var(--bubble-sway-duration)
      var(--bubble-sway-delay) ease-in-out alternate infinite;
  }

  @for $i from 0 through $bubble-count {
    &:nth-child(#{$i}) {
      --bubble-left-offset: #{random_range(0vw, 100vw)};
      --bubble-radius: #{random_range(1vw, 10vw)};
      --bubble-float-duration: #{random_range(6s, 12s)};
      --bubble-sway-duration: #{random_range(4s, 6s)};
      --bubble-float-delay: #{random_range(0s, 4s)};
      --bubble-sway-delay: #{random_range(0s, 4s)};
      --bubble-sway-type: #{sample($sway-type)};
    }
  }
}

@keyframes float-up {
  to {
    transform: translateY(-175vh);
  }
}

@keyframes sway-left-to-right {
  from {
    transform: translateX(-100%);
  }

  to {
    transform: translateX(100%);
  }
}

@keyframes sway-right-to-left {
  from {
    transform: translateX(100%);
  }

  to {
    transform: translateX(-100%);
  }
}

.loader-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh; /* Makes the container take up the full height of the viewport */
}
/* HTML: <div class="loader"></div> */
.loader {
  width: 60px;
  aspect-ratio: 4;
  background: radial-gradient(
      closest-side at calc(100% / 6) 50%,
      #000 90%,
      #0000
    )
    0/75% 100%;
  position: relative;
  animation: l15-0 1s infinite linear;
}
.loader::before {
  content: "";
  position: absolute;
  background: inherit;
  clip-path: inset(0 0 0 50%);
  inset: 0;
  animation: l15-1 0.5s infinite linear;
}
@keyframes l15-0 {
  0%,
  49.99% {
    transform: scale(1);
  }
  50%,
  100% {
    transform: scale(-1);
  }
}
@keyframes l15-1 {
  0% {
    transform: translateX(-37.5%) rotate(0turn);
  }
  80%,
  100% {
    transform: translateX(-37.5%) rotate(1turn);
  }
}

.right-content {
  top: 50%;
  right: 10px;
  transform: translateY(-50%);
  writing-mode: vertical-rl;
}

.right-content {
  width: 98%;
  position: absolute;
}
.fCLPmg {
  width: 2px;
  height: 8rem;
  background-color: #fff;
}
.center-left {
  position: absolute;
  top: 5%;
  transform: translate(-50%, -50%);
}
